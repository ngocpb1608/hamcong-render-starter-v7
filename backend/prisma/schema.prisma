generator client { provider = "prisma-client-js" }
datasource db { provider = "postgresql"; url = env("DATABASE_URL") }
enum UserRole { ADMIN STAFF }
enum EmpStatus { ACTIVE PAUSED LEFT }
model Workspace { id String @id @default(cuid()) slug String @unique name String users User[] employees Employee[] payrolls Payroll[] times Timesheet[] createdAt DateTime @default(now()) }
model User { id String @id @default(cuid()) email String @unique passwordHash String role UserRole @default(ADMIN) isActive Boolean @default(true) workspace Workspace @relation(fields:[workspaceId], references:[id]) workspaceId String createdAt DateTime @default(now()) }
model PasswordReset { id String @id @default(cuid()) user User @relation(fields:[userId], references:[id]) userId String token String @unique expiresAt DateTime usedAt DateTime? createdAt DateTime @default(now()) }
model Employee { id String @id @default(cuid()) code String name String dob DateTime? cccd String? status EmpStatus @default(ACTIVE) workspace Workspace @relation(fields:[workspaceId], references:[id]) workspaceId String times Timesheet[] @@unique([workspaceId, code]) }
model Timesheet { id String @id @default(cuid()) employee Employee @relation(fields:[employeeId], references:[id]) employeeId String date DateTime timeInMin Int? timeOutMin Int? rawIn String? rawOut String? sourceRow Json? createdAt DateTime @default(now()) }
model Payroll { id String @id @default(cuid()) workspace Workspace @relation(fields:[workspaceId], references:[id]) workspaceId String employee Employee @relation(fields:[employeeId], references:[id]) employeeId String month String hourly Float @default(0) meal Float @default(0) bonus Float @default(0) responsibility Float @default(0) penalty Float @default(0) advance Float @default(0) holidayMult Float @default(3) regHours Float @default(0) holHours Float @default(0) total Float @default(0) updatedAt DateTime @updatedAt @@unique([workspaceId, employeeId, month]) }